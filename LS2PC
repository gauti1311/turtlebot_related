#!/usr/bin/env python
import rospy
import sensor_msgs.point_cloud2 as pc2
from sensor_msgs.msg import LaserScan 
from laser_geometry import LaserProjection     ## laser_geometry is a package for processing laserscan_data and Laserprojection is a class to convert raw data into point_cloud

def callback(data):
    global msg
    global trigger
    msg = data
    trigger = 'TRUE'

def main():   
        global msg
        global trigger
        rospy.init_node("laser_scan to point_cloud", anonymous=True)
        rate = rospy.Rate(20) 
        laser_projection = LaserProjection()
        trigger  = 'FALSE'
        laser_sub = rospy.Subscriber("/scan", LaserScan, callback) 
        msg = LaserScan()
        while not rospy.is_shutdown():
            if trigger == 'TRUE':
                point_cloud2_msg = laser_projection.projectLaser(msg)  
                #print point_cloud2_msg
                point_generator = pc2.read_points(point_cloud2_msg)
                for point in point_generator:
                    x = point[0]
                    y = point[1]
                    print ('X: {}, Y:{}'.format(x,y))
                trigger = 'FALSE'
                rate.sleep()    
                       
if __name__ == '__main__':
    try:
        main()
        
    except rospy.ROSInterruptException:
        pass        

